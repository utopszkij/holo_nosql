  
DocumentHandler objectum
  doc: object      {id, colName, creator, modifier, ....}
  hash  
  collection: object
  validator: object
  accessRights : object
  
  load(hash)
  read(id)
  init(doc)
  update()
  delete()
  check()
  isAccessRight(userName, action)
  addRequest(propName)
  dropRequest(propName)
  addValidator(propName, propDef)
  dropValidator(propName)
  setValidatorRef(collectionName, id)
  addAccessRight(action, accessRightItem)
  dropAccessRight(action, accessRightItem)
  getValidator()
  getAcessRights()
  
CollectionHandler object extends DocumentHandker
  doc
  	 id	
    name
  hash
  validator: object  
  accessRights : object
  indexes:[propname, ...]	  
  load(hash)
  read(id)
  readByName(name)  ** új **
  init(name)   
  --- update()   
  --- delete()   ** átirt 
  drop()     ** új
  --- check()    ** átirt a validator itt a dokumentumaira vonatkozik
  addDocument(docHandler)
  find(propName, propValue) --> Cursor  ** új

  addRequest(propName)
  dropRequest(propName)
  addValidator(propName, propdDef)
  dropValidator(propName)
  addAccessRight(action, accessRightItem)
  dropAccessRight(action, accessRightItem)
  --- isAccessRight(userName, action)  ** átirt csak adminok modosithatják, írhatják, törölhetik
  addIndex(propName)  ** új
  dropIndex(propName) ** új
  getValidator()
  getAcessRights()
  getIndexes()   ** új
    
Cursor object
  hashes : [hash, ...]
  position
  next()  --> {"eof":bool, documentHandler}
  
Validator object
  reference:[collectionName, id] | []
  requests:[propName, ...]
  defs:{ propName: propDef, ...}

propDef 
  dataType  int|char|bool|date|dateTime|userName|pointer(collectionName)|
			  enum(value, value, ...)
  minValue
  maxValue
  maxLength
  trQuantity

accessRightItem:  G<groupName> | U<userName>        
  